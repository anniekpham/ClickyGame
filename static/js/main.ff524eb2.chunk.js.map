{"version":3,"sources":["assets/626.png","assets/624.png","assets/625.png","assets/619.png","assets/617.png","assets/609.png","assets/606.png","assets/604.png","assets/502.png","assets/501.png","assets/303.png","assets/300.png","component/header/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","score","topscore","header","react_default","a","createElement","className","options","Pic1","Pic2","Pic3","Pic4","Pic5","Pic6","Pic7","Pic8","Pic9","Pic10","Pic11","Pic12","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleclick","e","currscore","state","guessarr","guess","indexOf","target","id","setState","correct","_","console","log","push","length","shuffle","handlecorrectguess","map","option","src","onClick","dist","h","v","r","dur","int","max","q","fixed","fixedStop","freez","header_header","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff524eb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/626.51886104.png\";","module.exports = __webpack_public_path__ + \"static/media/624.e3b7cf30.png\";","module.exports = __webpack_public_path__ + \"static/media/625.69a7f528.png\";","module.exports = __webpack_public_path__ + \"static/media/619.d45633fe.png\";","module.exports = __webpack_public_path__ + \"static/media/617.ddf552db.png\";","module.exports = __webpack_public_path__ + \"static/media/609.7b78ce8e.png\";","module.exports = __webpack_public_path__ + \"static/media/606.fa74375c.png\";","module.exports = __webpack_public_path__ + \"static/media/604.34e45e8a.png\";","module.exports = __webpack_public_path__ + \"static/media/502.7805bc07.png\";","module.exports = __webpack_public_path__ + \"static/media/501.570802c7.png\";","module.exports = __webpack_public_path__ + \"static/media/303.8ef6e9e1.png\";","module.exports = __webpack_public_path__ + \"static/media/300.b57d5732.png\";","import React from 'react'\n\nconst Header = ({score, topscore, header}) => {\n    return (\n        <div className=\"nav\">\n            <h1>Experiment Game</h1>\n            <h3>{header}</h3>\n            <span className=\"score\">Score: {score}</span>\n            <span className=\"score\">Topscore: {topscore}</span>\n        </div>\n    )\n}\n\nexport default Header","import React, {Component} from 'react';\nimport './App.css';\nimport shuffle from 'shuffle-array'\nimport Header from './component/header'\nimport Pic1 from './assets/626.png'\nimport Pic2 from './assets/624.png'\nimport Pic3 from './assets/625.png'\nimport Pic4 from './assets/619.png'\nimport Pic5 from './assets/617.png'\nimport Pic6 from './assets/609.png'\nimport Pic7 from './assets/606.png'\nimport Pic8 from './assets/604.png'\nimport Pic9 from './assets/502.png'\nimport Pic10 from './assets/501.png'\nimport Pic11 from './assets/303.png'\nimport Pic12 from './assets/300.png'\nimport { Shake } from 'reshake'\n\nlet options = [Pic1, Pic2, Pic3, Pic4, Pic5, Pic6, Pic7, Pic8, Pic9, Pic10, Pic11, Pic12]\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      guess: [],\n      score: 0,\n      topscore: 0,\n      options: options,\n      correct: true,\n      header: 'Pick your experiment to begin'\n    }\n  }\n\n  handleclick = e => {\n    let currscore = this.state.score\n    let guessarr = this.state.guess\n    if (guessarr.indexOf(e.target.id) !== -1) {\n      if (this.state.score >= this.state.topscore) {\n        this.setState({\n          topscore: this.state.score,\n          score: 0,\n          guess: [],\n          correct: false,\n          header: 'Wrong Choice!'\n        }, _ => console.log(this.state.guess))\n      } else {\n        this.setState({ \n          score: 0, \n          guess: [],\n          correct: false,\n          header: 'Wrong Choice!'\n        }, _ => console.log(this.state.guess))\n      }\n    } else {\n      currscore += 1\n      guessarr.push(e.target.id)\n      this.setState({\n        guess: guessarr,\n        score: currscore,\n        correct: true,\n        header: 'Correct!'\n      }, _ => console.log(this.state.guess.length))\n    }\n    shuffle(options)\n  }\n\n  handlecorrectguess = _ => {\n    if (this.state.correct) {\n      return (\n        <div className=\"container\">\n          {this.state.options.map(option => (\n            <img src={option} id={option} className=\"image\" onClick={this.handleclick} />\n            ))}\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"container\">\n          <Shake \n          h={5}\n          v={5}\n          r={3}\n          dur={300}\n          int={10}\n          max={100}\n          q={1}\n          fixed={true}\n          fixedStop={false}\n          freez={false}>\n            {this.state.options.map(option => (\n              <img src={option} id={option} className=\"image\" onClick={this.handleclick} />\n              ))}\n        </Shake>\n      </div>\n      )\n    }\n  }\n  render () {\n  return (\n    <div className=\"App\">\n      <Header topscore={this.state.topscore} score={this.state.score} header={this.state.header} />\n      {this.handlecorrectguess()}\n    </div>\n  )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}